var searchIndex = {};
searchIndex["data_encoding"] = {"doc":"Correct, efficient, canonical, and generic data-encoding functions","items":[[3,"DecodeError","data_encoding","Decoding error",null,null],[12,"position","","Error position",0,null],[12,"kind","","Error kind",0,null],[3,"Array128","","Convenience wrapper for `[u8; 128]`",null,null],[3,"NoPad","","Base-conversion encoding (without padding)",null,null],[3,"Padded","","Padded base-conversion encoding",null,null],[3,"Builder","","Base representation",null,null],[12,"symbols","","Symbols",1,null],[12,"values","","Values",1,null],[12,"bit_order","","Bit-order",1,null],[12,"padding","","Padding",1,null],[12,"check_trailing_bits","","Whether trailing bits are checked",1,null],[3,"BuilderError","","Base building error",null,null],[4,"DecodeKind","","Decoding error kind",null,null],[13,"Length","","Invalid length",2,null],[13,"Symbol","","Invalid symbol",2,null],[13,"Trailing","","Non-zero trailing bits",2,null],[13,"Padding","","Invalid padding length",2,null],[4,"BitOrder","","Order in which bits are read from a byte",null,null],[13,"MostSignificantFirst","","Most significant bit first",3,null],[13,"LeastSignificantFirst","","Least significant bit first",3,null],[17,"HEXLOWER","","Lower-case hexadecimal encoding",null,null],[17,"HEXUPPER","","RFC4648 hex encoding (upper-case hexadecimal encoding)",null,null],[17,"HEXLOWER_PERMISSIVE","","Lower-case permissive hexadecimal encoding",null,null],[17,"BASE32","","RFC4648 base32 encoding",null,null],[17,"BASE32HEX","","RFC4648 base32hex encoding",null,null],[17,"BASE64","","RFC4648 base64 encoding",null,null],[17,"BASE64URL","","RFC4648 base64url encoding",null,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"decodekind"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"decodekind"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"decodeerror"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"decodeerror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"decodeerror"}],"output":{"name":"bool"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bitorder"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"bitorder"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"nopad"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"nopad"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"nopad"}],"output":{"name":"bool"}}],[11,"encode_len","","Returns the encoded length of an input of length `len`",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"encode_mut","","Encodes `input` in `output`",5,null],[11,"encode","","Returns encoded `input`",5,null],[11,"decode_len","","Returns the decoded length of an input of length `len`",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"decode_mut","","Decodes `input` in `output`",5,null],[11,"decode","","Returns decoded `input`",5,null],[11,"bit_width","","Returns the bit-width",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"bit_order","","Returns the bit-order",5,{"inputs":[{"name":"self"}],"output":{"name":"bitorder"}}],[11,"symbols","","Returns the symbols",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"translate","","Returns the non-canonical symbols",5,null],[11,"check_trailing_bits","","Whether trailing bits are checked",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"padded"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"padded"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"padded"}],"output":{"name":"bool"}}],[11,"encode_len","","Returns the encoded length of an input of length `len`",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"encode_mut","","Encodes `input` in `output`.",6,null],[11,"encode","","Returns encoded `input`",6,null],[11,"decode_len","","Returns the decoded length of an input of length `len`",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"decode_mut","","Decodes `input` in `output`",6,null],[11,"decode","","Returns decoded `input`",6,null],[11,"decode_concat_mut","","Decodes concatenated `input` in `output`",6,null],[11,"decode_concat","","Returns decoded concatenated `input`",6,null],[11,"no_pad","","Returns the associated base-conversion encoding",6,{"inputs":[{"name":"self"}],"output":{"name":"nopad"}}],[11,"padding","","Returns the padding character",6,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"buildererror"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"new","","Returns a canonical base representation for `symbols`",1,null],[11,"pad","","Sets padding",1,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"builder"}}],[11,"translate","","Adds non-canonical symbols",1,null],[11,"least_significant_bit_first","","Sets bit-order to least significant bit first",1,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"ignore_trailing_bits","","Ignores trailing bits",1,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"no_pad","","Returns the represented base-conversion encoding",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"padded","","Returns the represented padded base-conversion encoding",1,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"nopad"}],"output":{"name":"builder"}}],[11,"from","","",1,{"inputs":[{"name":"padded"}],"output":{"name":"builder"}}]],"paths":[[3,"DecodeError"],[3,"Builder"],[4,"DecodeKind"],[4,"BitOrder"],[3,"Array128"],[3,"NoPad"],[3,"Padded"],[3,"BuilderError"]]};
initSearch(searchIndex);
